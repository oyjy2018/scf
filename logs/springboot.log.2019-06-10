2019-06-10 09:28:50,411  INFO Version:21 - HV000001: Hibernate Validator 6.0.16.Final
2019-06-10 09:28:50,816  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f110fcfe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:50,906  INFO ConfigServicePropertySourceLocator:207 - Fetching config from server at : http://localhost:19000
2019-06-10 09:28:51,311  INFO ConfigServicePropertySourceLocator:151 - Located environment: name=scfcloud-cfg,util-cfg, profiles=[default], label=master, version=5cd3142cfafbc42e852a571c5abeea31f25c2c16, state=null
2019-06-10 09:28:51,311  INFO PropertySourceBootstrapConfiguration:101 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='http://192.168.1.252/lzscf/config.git/dev/util-cfg.properties'}, MapPropertySource {name='http://192.168.1.252/lzscf/config.git/dev/scfcloud-cfg.yml'}]}
2019-06-10 09:28:51,314  INFO ScfcloudApplication:675 - No active profile set, falling back to default profiles: default
2019-06-10 09:28:51,934  INFO RepositoryConfigurationDelegate:244 - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-10 09:28:51,935  INFO RepositoryConfigurationDelegate:126 - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-10 09:28:51,964  INFO RepositoryConfigurationDelegate:182 - Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces.
2019-06-10 09:28:52,108  INFO GenericScope:295 - BeanFactory id=55424775-d443-3b91-9b59-46a1470ddf73
2019-06-10 09:28:52,118  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'ApiFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,119  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'CompanyFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,119  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'DepartmentFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,120  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'FileFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,120  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'RoleFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,121  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'SystemFunctionFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,122  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'UserFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,160  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'shiroConfig' of type [ShiroConfig$$EnhancerBySpringCGLIB$$b154ef72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,277  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.com.zhjs.scfcloud.time.ScfcloudApplication.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,278  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'api.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,278  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'company.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,279  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'dept.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,279  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'file.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,280  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'role.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,280  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'system-function.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,281  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'user.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,281  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$dd3a9e83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,283  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignContext' of type [org.springframework.cloud.openfeign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,324  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feign.client-org.springframework.cloud.openfeign.FeignClientProperties' of type [org.springframework.cloud.openfeign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,327  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$7247e10c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,328  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignRequestOptions' of type [feign.Request$Options] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,330  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$a466f6cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,333  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,333  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,335  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,335  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$d24359db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,337  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,338  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.openfeign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,340  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignClient' of type [org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,342  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$16c44df5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,343  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignTargeter' of type [org.springframework.cloud.openfeign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,361  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'UserFeignService' of type [com.sun.proxy.$Proxy95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,361  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'myShiroRealm' of type [MyShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,364  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisManager' of type [org.crazycake.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,365  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisCacheManager' of type [org.crazycake.shiro.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,368  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisSessionDAO' of type [MyRedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,370  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'sessionManager' of type [MySessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,372  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,377  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,387  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f110fcfe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 09:28:52,585  INFO TomcatWebServer:90 - Tomcat initialized with port(s): 21000 (http)
2019-06-10 09:28:52,684  INFO ContextLoader:296 - Root WebApplicationContext: initialization completed in 1362 ms
2019-06-10 09:28:52,930  INFO AutowiredAnnotationBeanPostProcessor:447 - Autowired annotation is not supported on static fields: private static org.springframework.core.env.Environment com.zhjs.scfcloud.util.util.PropertiesUtil.env
2019-06-10 09:28:53,042  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2019-06-10 09:28:53,042  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-10 09:28:53,045  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2019-06-10 09:28:53,045  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-10 09:28:53,179  INFO ThreadPoolTaskExecutor:171 - Initializing ExecutorService 'applicationTaskExecutor'
2019-06-10 09:28:53,718  INFO InstanceInfoFactory:72 - Setting initial instance status as: STARTING
2019-06-10 09:28:53,743  INFO DiscoveryClient:349 - Initializing Eureka in region us-east-1
2019-06-10 09:28:53,794  INFO DiscoveryJerseyProvider:70 - Using JSON encoding codec LegacyJacksonJson
2019-06-10 09:28:53,795  INFO DiscoveryJerseyProvider:71 - Using JSON decoding codec LegacyJacksonJson
2019-06-10 09:28:53,864  INFO DiscoveryJerseyProvider:80 - Using XML encoding codec XStreamXml
2019-06-10 09:28:53,864  INFO DiscoveryJerseyProvider:81 - Using XML decoding codec XStreamXml
2019-06-10 09:28:54,023  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 09:28:54,048  INFO DiscoveryClient:958 - Disable delta property : false
2019-06-10 09:28:54,048  INFO DiscoveryClient:959 - Single vip registry refresh property : null
2019-06-10 09:28:54,048  INFO DiscoveryClient:960 - Force full registry fetch : false
2019-06-10 09:28:54,048  INFO DiscoveryClient:961 - Application is null : false
2019-06-10 09:28:54,048  INFO DiscoveryClient:962 - Registered Applications size is zero : true
2019-06-10 09:28:54,049  INFO DiscoveryClient:964 - Application version is -1: true
2019-06-10 09:28:54,049  INFO DiscoveryClient:1047 - Getting all instance registry info from the eureka server
2019-06-10 09:28:54,214  INFO DiscoveryClient:1056 - The response status is 200
2019-06-10 09:28:54,215  INFO DiscoveryClient:1270 - Starting heartbeat executor: renew interval is: 30
2019-06-10 09:28:54,217  INFO InstanceInfoReplicator:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-10 09:28:54,219  INFO DiscoveryClient:449 - Discovery Client initialized at timestamp 1560130134218 with initial instances count: 0
2019-06-10 09:28:54,221  INFO EurekaServiceRegistry:41 - Registering application SCFCLOUD with eureka with status UP
2019-06-10 09:28:54,222  INFO DiscoveryClient:1305 - Saw local status change event StatusChangeEvent [timestamp=1560130134221, current=UP, previous=STARTING]
2019-06-10 09:28:54,223  INFO DiscoveryClient:826 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000: registering service...
2019-06-10 09:28:54,253  INFO TomcatWebServer:204 - Tomcat started on port(s): 21000 (http) with context path ''
2019-06-10 09:28:54,255  INFO EurekaAutoServiceRegistration:143 - Updating port to 21000
2019-06-10 09:28:54,257  INFO ScfcloudApplication:59 - Started ScfcloudApplication in 3.956 seconds (JVM running for 4.423)
2019-06-10 09:28:54,286  INFO DiscoveryClient:835 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000 - registration status: 204
2019-06-10 09:29:24,218  INFO DiscoveryClient:958 - Disable delta property : false
2019-06-10 09:29:24,219  INFO DiscoveryClient:959 - Single vip registry refresh property : null
2019-06-10 09:29:24,219  INFO DiscoveryClient:960 - Force full registry fetch : false
2019-06-10 09:29:24,219  INFO DiscoveryClient:961 - Application is null : false
2019-06-10 09:29:24,220  INFO DiscoveryClient:962 - Registered Applications size is zero : true
2019-06-10 09:29:24,220  INFO DiscoveryClient:964 - Application version is -1: false
2019-06-10 09:29:24,220  INFO DiscoveryClient:1047 - Getting all instance registry info from the eureka server
2019-06-10 09:29:24,269  INFO DiscoveryClient:1056 - The response status is 200
2019-06-10 09:33:54,065  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 09:38:54,081  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 09:43:54,097  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 09:48:54,113  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 09:53:54,141  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 09:58:54,157  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:03:54,173  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:08:54,188  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:13:54,204  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:18:54,220  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:21:44,451  INFO DispatcherServlet:524 - Initializing Servlet 'dispatcherServlet'
2019-06-10 10:21:44,457  INFO DispatcherServlet:546 - Completed initialization in 5 ms
2019-06-10 10:21:44,467  INFO AbstractValidatingSessionManager:233 - Enabling session validation scheduler...
2019-06-10 10:21:44,468  INFO MySessionManager:48 - id:null
2019-06-10 10:21:44,495  INFO LoginController:39 - 登录参数：{"loginAccount":"13988889999","password":"123456"}
2019-06-10 10:21:44,592  INFO ChainedDynamicProperty:115 - Flipping property: scfcloud-system.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-10 10:21:44,607  INFO ShutdownEnabledTimer:58 - Shutdown hook installed for: NFLoadBalancer-PingTimer-scfcloud-system
2019-06-10 10:21:44,609  INFO BaseLoadBalancer:197 - Client: scfcloud-system instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=scfcloud-system,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-10 10:21:44,612  INFO DynamicServerListLoadBalancer:222 - Using serverListUpdater PollingServerListUpdater
2019-06-10 10:21:44,614  INFO DynamicServerListLoadBalancer:150 - DynamicServerListLoadBalancer for client scfcloud-system initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=scfcloud-system,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@9d234ad
2019-06-10 10:21:44,649  WARN AbstractAuthenticator:216 - Authentication failed for token submission [MyUsernamePasswordToken - 13988889999, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: scfcloud-system
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:108)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:78)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy95.getUserByPhone(Unknown Source)
	at MyShiroRealm.doGetAuthenticationInfo(MyShiroRealm.java:68)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at LoginController.login(LoginController.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: scfcloud-system
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 85 more
2019-06-10 10:21:44,651 ERROR LoginController:49 - 用户名或密码错误:Authentication failed for token submission [MyUsernamePasswordToken - 13988889999, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
2019-06-10 10:23:54,236  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:24:03,938  INFO Version:21 - HV000001: Hibernate Validator 6.0.16.Final
2019-06-10 10:24:04,311  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$601003e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:04,409  INFO ConfigServicePropertySourceLocator:207 - Fetching config from server at : http://localhost:19000
2019-06-10 10:24:04,926  INFO ConfigServicePropertySourceLocator:151 - Located environment: name=scfcloud-cfg,util-cfg, profiles=[default], label=master, version=f6e67be3fc9b802385538ba1a8b4121714fdfb3b, state=null
2019-06-10 10:24:04,926  INFO PropertySourceBootstrapConfiguration:101 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='http://192.168.1.252/lzscf/config.git/dev/util-cfg.properties'}, MapPropertySource {name='http://192.168.1.252/lzscf/config.git/dev/scfcloud-cfg.yml'}]}
2019-06-10 10:24:04,930  INFO ScfcloudApplication:675 - No active profile set, falling back to default profiles: default
2019-06-10 10:24:05,326  INFO RepositoryConfigurationDelegate:244 - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-10 10:24:05,328  INFO RepositoryConfigurationDelegate:126 - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-10 10:24:05,357  INFO RepositoryConfigurationDelegate:182 - Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces.
2019-06-10 10:24:05,517  INFO GenericScope:295 - BeanFactory id=55424775-d443-3b91-9b59-46a1470ddf73
2019-06-10 10:24:05,528  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'ApiFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,529  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'CompanyFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,530  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'DepartmentFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,531  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'FileFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,531  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'RoleFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,532  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'SystemFunctionFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,533  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'UserFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,576  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'shiroConfig' of type [ShiroConfig$$EnhancerBySpringCGLIB$$c644f2b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,700  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.com.zhjs.scfcloud.time.ScfcloudApplication.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,700  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'api.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,701  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'company.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,702  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'dept.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,702  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'file.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,703  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'role.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,703  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'system-function.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,704  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'user.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,704  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$f22aa1c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,706  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignContext' of type [org.springframework.cloud.openfeign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,754  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feign.client-org.springframework.cloud.openfeign.FeignClientProperties' of type [org.springframework.cloud.openfeign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,756  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$8737e44c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,758  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignRequestOptions' of type [feign.Request$Options] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,761  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$b956fa0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,763  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,764  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,765  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,766  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$e7335d1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,769  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,770  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.openfeign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,772  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignClient' of type [org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,774  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$2bb45135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,776  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignTargeter' of type [org.springframework.cloud.openfeign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,799  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'UserFeignService' of type [com.sun.proxy.$Proxy95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,800  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'myShiroRealm' of type [MyShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,803  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisManager' of type [org.crazycake.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,803  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisCacheManager' of type [org.crazycake.shiro.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,807  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisSessionDAO' of type [MyRedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,810  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'sessionManager' of type [MySessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,811  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,818  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:05,872  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$601003e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:24:06,052  INFO TomcatWebServer:90 - Tomcat initialized with port(s): 21000 (http)
2019-06-10 10:24:06,161  INFO ContextLoader:296 - Root WebApplicationContext: initialization completed in 1223 ms
2019-06-10 10:24:06,453  INFO AutowiredAnnotationBeanPostProcessor:447 - Autowired annotation is not supported on static fields: private static org.springframework.core.env.Environment com.zhjs.scfcloud.util.util.PropertiesUtil.env
2019-06-10 10:24:06,589  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2019-06-10 10:24:06,589  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-10 10:24:06,592  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2019-06-10 10:24:06,592  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-10 10:24:06,738  INFO ThreadPoolTaskExecutor:171 - Initializing ExecutorService 'applicationTaskExecutor'
2019-06-10 10:24:07,177  INFO InstanceInfoFactory:72 - Setting initial instance status as: STARTING
2019-06-10 10:24:07,200  INFO DiscoveryClient:349 - Initializing Eureka in region us-east-1
2019-06-10 10:24:07,253  INFO DiscoveryJerseyProvider:70 - Using JSON encoding codec LegacyJacksonJson
2019-06-10 10:24:07,253  INFO DiscoveryJerseyProvider:71 - Using JSON decoding codec LegacyJacksonJson
2019-06-10 10:24:07,328  INFO DiscoveryJerseyProvider:80 - Using XML encoding codec XStreamXml
2019-06-10 10:24:07,328  INFO DiscoveryJerseyProvider:81 - Using XML decoding codec XStreamXml
2019-06-10 10:24:07,501  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:24:07,524  INFO DiscoveryClient:958 - Disable delta property : false
2019-06-10 10:24:07,524  INFO DiscoveryClient:959 - Single vip registry refresh property : null
2019-06-10 10:24:07,525  INFO DiscoveryClient:960 - Force full registry fetch : false
2019-06-10 10:24:07,525  INFO DiscoveryClient:961 - Application is null : false
2019-06-10 10:24:07,525  INFO DiscoveryClient:962 - Registered Applications size is zero : true
2019-06-10 10:24:07,525  INFO DiscoveryClient:964 - Application version is -1: true
2019-06-10 10:24:07,525  INFO DiscoveryClient:1047 - Getting all instance registry info from the eureka server
2019-06-10 10:24:07,600  INFO DiscoveryClient:1056 - The response status is 200
2019-06-10 10:24:07,603  INFO DiscoveryClient:1270 - Starting heartbeat executor: renew interval is: 30
2019-06-10 10:24:07,604  INFO InstanceInfoReplicator:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-10 10:24:07,607  INFO DiscoveryClient:449 - Discovery Client initialized at timestamp 1560133447606 with initial instances count: 1
2019-06-10 10:24:07,609  INFO EurekaServiceRegistry:41 - Registering application SCFCLOUD with eureka with status UP
2019-06-10 10:24:07,609  INFO DiscoveryClient:1305 - Saw local status change event StatusChangeEvent [timestamp=1560133447609, current=UP, previous=STARTING]
2019-06-10 10:24:07,610  INFO DiscoveryClient:826 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000: registering service...
2019-06-10 10:24:07,631  INFO DiscoveryClient:835 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000 - registration status: 204
2019-06-10 10:24:07,633  INFO TomcatWebServer:204 - Tomcat started on port(s): 21000 (http) with context path ''
2019-06-10 10:24:07,634  INFO EurekaAutoServiceRegistration:143 - Updating port to 21000
2019-06-10 10:24:07,635  INFO ScfcloudApplication:59 - Started ScfcloudApplication in 3.802 seconds (JVM running for 5.006)
2019-06-10 10:24:36,100  INFO DispatcherServlet:524 - Initializing Servlet 'dispatcherServlet'
2019-06-10 10:24:36,107  INFO DispatcherServlet:546 - Completed initialization in 6 ms
2019-06-10 10:24:36,119  INFO AbstractValidatingSessionManager:233 - Enabling session validation scheduler...
2019-06-10 10:24:36,120  INFO MySessionManager:48 - id:null
2019-06-10 10:24:36,150  INFO LoginController:39 - 登录参数：{"loginAccount":"13988889999","password":"123456"}
2019-06-10 10:24:36,265  INFO ChainedDynamicProperty:115 - Flipping property: scfcloud-system.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-10 10:24:36,284  INFO ShutdownEnabledTimer:58 - Shutdown hook installed for: NFLoadBalancer-PingTimer-scfcloud-system
2019-06-10 10:24:36,287  INFO BaseLoadBalancer:197 - Client: scfcloud-system instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=scfcloud-system,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-10 10:24:36,289  INFO DynamicServerListLoadBalancer:222 - Using serverListUpdater PollingServerListUpdater
2019-06-10 10:24:36,292  INFO DynamicServerListLoadBalancer:150 - DynamicServerListLoadBalancer for client scfcloud-system initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=scfcloud-system,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3cd76500
2019-06-10 10:24:36,334  WARN AbstractAuthenticator:216 - Authentication failed for token submission [MyUsernamePasswordToken - 13988889999, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: scfcloud-system
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:108)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:78)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy95.getUserByPhone(Unknown Source)
	at MyShiroRealm.doGetAuthenticationInfo(MyShiroRealm.java:68)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at LoginController.login(LoginController.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: scfcloud-system
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 85 more
2019-06-10 10:24:36,336 ERROR LoginController:49 - 用户名或密码错误:Authentication failed for token submission [MyUsernamePasswordToken - 13988889999, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
2019-06-10 10:24:58,523  INFO MySessionManager:48 - id:null
2019-06-10 10:24:58,524  INFO LoginController:39 - 登录参数：{"loginAccount":"13988889999","password":"123456"}
2019-06-10 10:24:58,525  WARN AbstractAuthenticator:216 - Authentication failed for token submission [MyUsernamePasswordToken - 13988889999, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: scfcloud-system
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:108)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:78)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy95.getUserByPhone(Unknown Source)
	at MyShiroRealm.doGetAuthenticationInfo(MyShiroRealm.java:68)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at LoginController.login(LoginController.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: scfcloud-system
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 85 more
2019-06-10 10:24:58,525 ERROR LoginController:49 - 用户名或密码错误:Authentication failed for token submission [MyUsernamePasswordToken - 13988889999, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
2019-06-10 10:25:07,338  INFO ChainedDynamicProperty:115 - Flipping property: scfcloud-system.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-10 10:25:31,518  INFO PollingServerListUpdater:53 - Shutting down the Executor Pool for PollingServerListUpdater
2019-06-10 10:25:31,519  INFO EurekaServiceRegistry:65 - Unregistering application SCFCLOUD with eureka with status DOWN
2019-06-10 10:25:31,520  WARN DiscoveryClient:1303 - Saw local status change event StatusChangeEvent [timestamp=1560133531520, current=DOWN, previous=UP]
2019-06-10 10:25:31,521  INFO DiscoveryClient:826 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000: registering service...
2019-06-10 10:25:31,527  INFO ThreadPoolTaskExecutor:208 - Shutting down ExecutorService 'applicationTaskExecutor'
2019-06-10 10:25:31,529  INFO DiscoveryClient:835 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000 - registration status: 204
2019-06-10 10:25:31,563  INFO ShutdownEnabledTimer:67 - Shutdown hook removed for: NFLoadBalancer-PingTimer-scfcloud-system
2019-06-10 10:25:31,563  INFO ShutdownEnabledTimer:72 - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1055)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1055)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
2019-06-10 10:25:31,568  INFO DiscoveryClient:888 - Shutting down DiscoveryClient ...
2019-06-10 10:25:34,571  INFO DiscoveryClient:922 - Unregistering ...
2019-06-10 10:25:34,581  INFO DiscoveryClient:924 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000 - deregister  status: 200
2019-06-10 10:25:34,600  INFO DiscoveryClient:911 - Completed shut down of DiscoveryClient
2019-06-10 10:25:36,834  INFO Version:21 - HV000001: Hibernate Validator 6.0.16.Final
2019-06-10 10:25:37,237  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28cb6907] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:37,335  INFO ConfigServicePropertySourceLocator:207 - Fetching config from server at : http://localhost:19000
2019-06-10 10:25:37,562  INFO ConfigServicePropertySourceLocator:151 - Located environment: name=scfcloud-cfg,util-cfg, profiles=[default], label=master, version=f6e67be3fc9b802385538ba1a8b4121714fdfb3b, state=null
2019-06-10 10:25:37,562  INFO PropertySourceBootstrapConfiguration:101 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='http://192.168.1.252/lzscf/config.git/dev/util-cfg.properties'}, MapPropertySource {name='http://192.168.1.252/lzscf/config.git/dev/scfcloud-cfg.yml'}]}
2019-06-10 10:25:37,565  INFO ScfcloudApplication:675 - No active profile set, falling back to default profiles: default
2019-06-10 10:25:37,926  INFO RepositoryConfigurationDelegate:244 - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-10 10:25:37,928  INFO RepositoryConfigurationDelegate:126 - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-10 10:25:37,956  INFO RepositoryConfigurationDelegate:182 - Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2019-06-10 10:25:38,096  INFO GenericScope:295 - BeanFactory id=55424775-d443-3b91-9b59-46a1470ddf73
2019-06-10 10:25:38,105  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'ApiFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,106  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'CompanyFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,107  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'DepartmentFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,107  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'FileFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,108  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'RoleFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,108  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'SystemFunctionFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,109  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'UserFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,147  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'shiroConfig' of type [ShiroConfig$$EnhancerBySpringCGLIB$$e90f5b7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,264  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.com.zhjs.scfcloud.time.ScfcloudApplication.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,265  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'api.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,265  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'company.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,266  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'dept.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,266  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'file.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,267  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'role.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,267  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'system-function.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,268  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'user.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,268  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$14f50a8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,270  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignContext' of type [org.springframework.cloud.openfeign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,311  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feign.client-org.springframework.cloud.openfeign.FeignClientProperties' of type [org.springframework.cloud.openfeign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,314  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$aa024d15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,316  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignRequestOptions' of type [feign.Request$Options] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,317  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$dc2162d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,320  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,320  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,322  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,322  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$9fdc5e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,325  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,326  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.openfeign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,328  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignClient' of type [org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,329  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$4e7eb9fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,331  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignTargeter' of type [org.springframework.cloud.openfeign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,351  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'UserFeignService' of type [com.sun.proxy.$Proxy95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,351  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'myShiroRealm' of type [MyShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,354  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisManager' of type [org.crazycake.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,354  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisCacheManager' of type [org.crazycake.shiro.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,357  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisSessionDAO' of type [MyRedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,359  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'sessionManager' of type [MySessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,360  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,366  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,375  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28cb6907] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 10:25:38,570  INFO TomcatWebServer:90 - Tomcat initialized with port(s): 21000 (http)
2019-06-10 10:25:38,667  INFO ContextLoader:296 - Root WebApplicationContext: initialization completed in 1094 ms
2019-06-10 10:25:38,908  INFO AutowiredAnnotationBeanPostProcessor:447 - Autowired annotation is not supported on static fields: private static org.springframework.core.env.Environment com.zhjs.scfcloud.util.util.PropertiesUtil.env
2019-06-10 10:25:39,019  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2019-06-10 10:25:39,019  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-10 10:25:39,022  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2019-06-10 10:25:39,022  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-10 10:25:39,133  INFO ThreadPoolTaskExecutor:171 - Initializing ExecutorService 'applicationTaskExecutor'
2019-06-10 10:25:39,513  INFO InstanceInfoFactory:72 - Setting initial instance status as: STARTING
2019-06-10 10:25:39,532  INFO DiscoveryClient:349 - Initializing Eureka in region us-east-1
2019-06-10 10:25:39,579  INFO DiscoveryJerseyProvider:70 - Using JSON encoding codec LegacyJacksonJson
2019-06-10 10:25:39,579  INFO DiscoveryJerseyProvider:71 - Using JSON decoding codec LegacyJacksonJson
2019-06-10 10:25:39,642  INFO DiscoveryJerseyProvider:80 - Using XML encoding codec XStreamXml
2019-06-10 10:25:39,642  INFO DiscoveryJerseyProvider:81 - Using XML decoding codec XStreamXml
2019-06-10 10:25:39,764  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:25:39,786  INFO DiscoveryClient:958 - Disable delta property : false
2019-06-10 10:25:39,786  INFO DiscoveryClient:959 - Single vip registry refresh property : null
2019-06-10 10:25:39,786  INFO DiscoveryClient:960 - Force full registry fetch : false
2019-06-10 10:25:39,787  INFO DiscoveryClient:961 - Application is null : false
2019-06-10 10:25:39,787  INFO DiscoveryClient:962 - Registered Applications size is zero : true
2019-06-10 10:25:39,787  INFO DiscoveryClient:964 - Application version is -1: true
2019-06-10 10:25:39,787  INFO DiscoveryClient:1047 - Getting all instance registry info from the eureka server
2019-06-10 10:25:39,853  INFO DiscoveryClient:1056 - The response status is 200
2019-06-10 10:25:39,855  INFO DiscoveryClient:1270 - Starting heartbeat executor: renew interval is: 30
2019-06-10 10:25:39,856  INFO InstanceInfoReplicator:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-10 10:25:39,858  INFO DiscoveryClient:449 - Discovery Client initialized at timestamp 1560133539858 with initial instances count: 2
2019-06-10 10:25:39,860  INFO EurekaServiceRegistry:41 - Registering application SCFCLOUD with eureka with status UP
2019-06-10 10:25:39,860  INFO DiscoveryClient:1305 - Saw local status change event StatusChangeEvent [timestamp=1560133539860, current=UP, previous=STARTING]
2019-06-10 10:25:39,861  INFO DiscoveryClient:826 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000: registering service...
2019-06-10 10:25:39,880  INFO DiscoveryClient:835 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000 - registration status: 204
2019-06-10 10:25:39,883  INFO TomcatWebServer:204 - Tomcat started on port(s): 21000 (http) with context path ''
2019-06-10 10:25:39,883  INFO EurekaAutoServiceRegistration:143 - Updating port to 21000
2019-06-10 10:25:39,884  INFO ScfcloudApplication:59 - Started ScfcloudApplication in 3.154 seconds (JVM running for 3.655)
2019-06-10 10:25:57,365  INFO DispatcherServlet:524 - Initializing Servlet 'dispatcherServlet'
2019-06-10 10:25:57,371  INFO DispatcherServlet:546 - Completed initialization in 6 ms
2019-06-10 10:25:57,381  INFO AbstractValidatingSessionManager:233 - Enabling session validation scheduler...
2019-06-10 10:25:57,381  INFO MySessionManager:48 - id:null
2019-06-10 10:25:57,407  INFO LoginController:39 - 登录参数：{"loginAccount":"13988889999","password":"123456"}
2019-06-10 10:25:57,501  INFO ChainedDynamicProperty:115 - Flipping property: scfcloud-system.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-10 10:25:57,517  INFO ShutdownEnabledTimer:58 - Shutdown hook installed for: NFLoadBalancer-PingTimer-scfcloud-system
2019-06-10 10:25:57,519  INFO BaseLoadBalancer:197 - Client: scfcloud-system instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=scfcloud-system,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-10 10:25:57,521  INFO DynamicServerListLoadBalancer:222 - Using serverListUpdater PollingServerListUpdater
2019-06-10 10:25:57,533  INFO ChainedDynamicProperty:115 - Flipping property: scfcloud-system.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-10 10:25:57,534  INFO DynamicServerListLoadBalancer:150 - DynamicServerListLoadBalancer for client scfcloud-system initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=scfcloud-system,current list of Servers=[PC-20190528OEHK:22000],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:PC-20190528OEHK:22000;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2dcfc8a0
2019-06-10 10:25:58,525  INFO ChainedDynamicProperty:115 - Flipping property: scfcloud-system.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-10 10:27:50,782  INFO MySessionManager:48 - id:null
2019-06-10 10:29:03,114  INFO MySessionManager:48 - id:null
2019-06-10 10:30:39,804  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:30:53,811  INFO MySessionManager:48 - id:31718325-c3c1-4827-8531-66255ed81030
2019-06-10 10:30:53,861  INFO UserController:220 - subject:再次发送邀请邮件,userReInviteDTO:{"email":"983014204@qq.com"}
2019-06-10 10:34:46,442  INFO MySessionManager:48 - id:31718325-c3c1-4827-8531-66255ed81030
2019-06-10 10:34:46,449  INFO UserController:220 - subject:再次发送邀请邮件,userReInviteDTO:{"email":"983014204@qq.com"}
2019-06-10 10:35:39,820  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:39:41,960  INFO MySessionManager:48 - id:31718325-c3c1-4827-8531-66255ed81030
2019-06-10 10:39:41,968  INFO UserController:220 - subject:再次发送邀请邮件,userReInviteDTO:{"email":"983014204@qq.com"}
2019-06-10 10:40:39,836  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:40:47,537  INFO MySessionManager:48 - id:31718325-c3c1-4827-8531-66255ed81030
2019-06-10 10:40:47,543  INFO UserController:220 - subject:再次发送邀请邮件,userReInviteDTO:{"email":"983014204@qq.com"}
2019-06-10 10:42:42,316  INFO MySessionManager:48 - id:31718325-c3c1-4827-8531-66255ed81030
2019-06-10 10:42:42,323  INFO UserController:220 - subject:再次发送邀请邮件,userReInviteDTO:{"email":"983014204@qq.com"}
2019-06-10 10:45:39,851  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:50:39,867  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 10:55:39,883  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:00:39,898  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:05:39,914  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:10:39,930  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:15:39,946  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:20:39,962  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:25:39,978  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:25:57,550  INFO AbstractValidatingSessionManager:275 - Validating all active sessions...
2019-06-10 11:25:57,593  INFO AbstractValidatingSessionManager:308 - Finished session validation.  No sessions were stopped.
2019-06-10 11:30:39,994  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:35:40,010  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:40:40,025  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:45:40,041  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:50:40,057  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 11:55:40,073  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:00:40,089  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:05:40,105  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:10:40,121  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:15:40,137  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:20:40,153  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:25:40,169  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:25:57,718  INFO AbstractValidatingSessionManager:275 - Validating all active sessions...
2019-06-10 12:25:57,729  INFO AbstractValidatingSessionManager:308 - Finished session validation.  No sessions were stopped.
2019-06-10 12:30:40,185  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:35:40,200  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:40:40,216  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:45:40,232  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:50:40,248  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 12:55:40,264  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 13:00:40,280  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 13:05:40,296  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 13:30:59,502  INFO AbstractValidatingSessionManager:275 - Validating all active sessions...
2019-06-10 13:30:59,518 ERROR RedirectingEurekaHttpClient:83 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:20000/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Software caused connection abort: recv failed
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1405)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Software caused connection abort: recv failed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:161)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:276)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:294)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2019-06-10 13:30:59,521  WARN RetryableEurekaHttpClient:130 - Request execution failed with message: java.net.SocketException: Software caused connection abort: recv failed
2019-06-10 13:30:59,522 ERROR DiscoveryClient:860 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1405)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-06-10 13:30:59,524  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 13:35:59,539  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 13:40:59,555  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 13:45:59,570  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 13:50:59,586  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 13:55:59,601  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:00:59,617  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:05:59,632  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:10:59,648  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:15:59,663  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:20:59,679  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:25:59,695  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:30:59,710  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:35:59,725  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:40:59,741  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:45:59,757  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:50:59,772  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 14:55:59,788  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 15:29:15,504  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 15:29:15,517 ERROR RedirectingEurekaHttpClient:83 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:20000/eureka/}
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.NoHttpResponseException: localhost:20000 failed to respond
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1405)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.NoHttpResponseException: localhost:20000 failed to respond
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:141)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:294)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2019-06-10 15:29:15,519  WARN RetryableEurekaHttpClient:130 - Request execution failed with message: org.apache.http.NoHttpResponseException: localhost:20000 failed to respond
2019-06-10 15:29:15,520 ERROR DiscoveryClient:860 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1405)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-06-10 15:34:15,522  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 15:34:33,161  INFO Version:21 - HV000001: Hibernate Validator 6.0.16.Final
2019-06-10 15:34:33,565  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e1eceb01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:33,659  INFO ConfigServicePropertySourceLocator:207 - Fetching config from server at : http://localhost:19000
2019-06-10 15:34:33,952  INFO ConfigServicePropertySourceLocator:151 - Located environment: name=scfcloud-cfg,util-cfg, profiles=[default], label=master, version=f6e67be3fc9b802385538ba1a8b4121714fdfb3b, state=null
2019-06-10 15:34:33,953  INFO PropertySourceBootstrapConfiguration:101 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='http://192.168.1.252/lzscf/config.git/dev/util-cfg.properties'}, MapPropertySource {name='http://192.168.1.252/lzscf/config.git/dev/scfcloud-cfg.yml'}]}
2019-06-10 15:34:33,959  INFO ScfcloudApplication:675 - No active profile set, falling back to default profiles: default
2019-06-10 15:34:34,348  INFO RepositoryConfigurationDelegate:244 - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-10 15:34:34,350  INFO RepositoryConfigurationDelegate:126 - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-10 15:34:34,382  INFO RepositoryConfigurationDelegate:182 - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces.
2019-06-10 15:34:34,536  INFO GenericScope:295 - BeanFactory id=55424775-d443-3b91-9b59-46a1470ddf73
2019-06-10 15:34:34,546  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'ApiFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,547  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'CompanyFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,547  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'DepartmentFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,548  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'FileFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,548  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'RoleFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,549  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'SystemFunctionFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,550  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'UserFeignService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,590  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'shiroConfig' of type [ShiroConfig$$EnhancerBySpringCGLIB$$a230dd75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,711  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.com.zhjs.scfcloud.time.ScfcloudApplication.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,712  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'api.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,712  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'company.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,713  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'dept.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,713  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'file.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,714  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'role.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,714  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'system-function.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,715  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'user.FeignClientSpecification' of type [org.springframework.cloud.openfeign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,715  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$ce168c86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,717  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignContext' of type [org.springframework.cloud.openfeign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,760  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feign.client-org.springframework.cloud.openfeign.FeignClientProperties' of type [org.springframework.cloud.openfeign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,763  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$6323cf0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,765  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignRequestOptions' of type [feign.Request$Options] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,767  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$9542e4d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,769  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,770  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,771  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,772  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$c31f47de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,775  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,776  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.openfeign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,777  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignClient' of type [org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,779  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$7a03bf8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,781  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'feignTargeter' of type [org.springframework.cloud.openfeign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,801  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'UserFeignService' of type [com.sun.proxy.$Proxy95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,802  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'myShiroRealm' of type [MyShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,804  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisManager' of type [org.crazycake.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,805  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisCacheManager' of type [org.crazycake.shiro.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,808  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'redisSessionDAO' of type [MyRedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,810  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'sessionManager' of type [MySessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,812  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,817  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:34,826  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e1eceb01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 15:34:35,024  INFO TomcatWebServer:90 - Tomcat initialized with port(s): 21000 (http)
2019-06-10 15:34:35,122  INFO ContextLoader:296 - Root WebApplicationContext: initialization completed in 1147 ms
2019-06-10 15:34:35,365  INFO AutowiredAnnotationBeanPostProcessor:447 - Autowired annotation is not supported on static fields: private static org.springframework.core.env.Environment com.zhjs.scfcloud.util.util.PropertiesUtil.env
2019-06-10 15:34:35,473  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2019-06-10 15:34:35,473  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-10 15:34:35,476  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2019-06-10 15:34:35,476  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-10 15:34:35,581  INFO ThreadPoolTaskExecutor:171 - Initializing ExecutorService 'applicationTaskExecutor'
2019-06-10 15:34:35,966  INFO InstanceInfoFactory:72 - Setting initial instance status as: STARTING
2019-06-10 15:34:35,988  INFO DiscoveryClient:349 - Initializing Eureka in region us-east-1
2019-06-10 15:34:36,037  INFO DiscoveryJerseyProvider:70 - Using JSON encoding codec LegacyJacksonJson
2019-06-10 15:34:36,038  INFO DiscoveryJerseyProvider:71 - Using JSON decoding codec LegacyJacksonJson
2019-06-10 15:34:36,107  INFO DiscoveryJerseyProvider:80 - Using XML encoding codec XStreamXml
2019-06-10 15:34:36,108  INFO DiscoveryJerseyProvider:81 - Using XML decoding codec XStreamXml
2019-06-10 15:34:36,243  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 15:34:36,266  INFO DiscoveryClient:958 - Disable delta property : false
2019-06-10 15:34:36,267  INFO DiscoveryClient:959 - Single vip registry refresh property : null
2019-06-10 15:34:36,267  INFO DiscoveryClient:960 - Force full registry fetch : false
2019-06-10 15:34:36,267  INFO DiscoveryClient:961 - Application is null : false
2019-06-10 15:34:36,267  INFO DiscoveryClient:962 - Registered Applications size is zero : true
2019-06-10 15:34:36,267  INFO DiscoveryClient:964 - Application version is -1: true
2019-06-10 15:34:36,267  INFO DiscoveryClient:1047 - Getting all instance registry info from the eureka server
2019-06-10 15:34:36,336  INFO DiscoveryClient:1056 - The response status is 200
2019-06-10 15:34:36,338  INFO DiscoveryClient:1270 - Starting heartbeat executor: renew interval is: 30
2019-06-10 15:34:36,340  INFO InstanceInfoReplicator:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-10 15:34:36,342  INFO DiscoveryClient:449 - Discovery Client initialized at timestamp 1560152076342 with initial instances count: 2
2019-06-10 15:34:36,344  INFO EurekaServiceRegistry:41 - Registering application SCFCLOUD with eureka with status UP
2019-06-10 15:34:36,344  INFO DiscoveryClient:1305 - Saw local status change event StatusChangeEvent [timestamp=1560152076344, current=UP, previous=STARTING]
2019-06-10 15:34:36,345  INFO DiscoveryClient:826 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000: registering service...
2019-06-10 15:34:36,365  INFO DiscoveryClient:835 - DiscoveryClient_SCFCLOUD/PC-20190528OEHK:scfcloud:21000 - registration status: 204
2019-06-10 15:34:36,367  INFO TomcatWebServer:204 - Tomcat started on port(s): 21000 (http) with context path ''
2019-06-10 15:34:36,368  INFO EurekaAutoServiceRegistration:143 - Updating port to 21000
2019-06-10 15:34:36,369  INFO ScfcloudApplication:59 - Started ScfcloudApplication in 3.315 seconds (JVM running for 3.72)
2019-06-10 15:39:36,284  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 15:44:36,300  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 15:49:36,316  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 15:54:36,332  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 15:59:36,348  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 16:04:36,364  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 16:09:36,380  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 17:30:54,512  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 17:35:54,534  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 17:40:54,550  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 17:45:54,566  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 17:50:54,582  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 17:55:54,598  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 18:00:54,614  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 18:05:54,629  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 18:10:54,645  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 18:15:54,661  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 18:20:54,677  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 18:25:54,693  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 19:55:08,501  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:00:08,524  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:05:08,540  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:10:08,556  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:15:08,572  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:20:08,588  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:25:08,603  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:30:08,618  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:35:08,634  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:44:20,510  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:49:20,527  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:54:20,543  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 20:59:20,559  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 21:04:20,575  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 21:09:20,591  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2019-06-10 21:14:20,607  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
